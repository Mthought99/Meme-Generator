{"ast":null,"code":"var _jsxFileName = \"/Users/oluwaseyimichael/Dev/React/MemeGenerator/meme-generator/src/components/Meme.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // import memesData from \"../memesData.js\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n\n  // [memeImage, setMemeImage] = React.useState()\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"https://i.imgflip.com/30b1gx.jpg\"\n  });\n  const [allMemes, setAllMemes] = React.useState([]);\n  React.useEffect(() => {\n    async function getMemes() {\n      const res = await fetch(\"https://api.imgflip.com/get_memes\");\n      const data = await res.json();\n      setAllMemes(data.data.memes);\n    }\n\n    getMeme();\n  }, []);\n\n  function getMemeImage() {\n    const randomNumber = Math.floor(Math.random() * allMemes.length);\n    const url = allMemes[randomNumber].url;\n    setMeme(prevMeme => ({ ...prevMeme,\n      randomImage: url\n    }));\n  }\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setMeme(prevMeme => ({ ...prevMeme,\n      [name]: value\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Top text\",\n        className: \"form--input\",\n        name: \"topText\",\n        value: meme.topText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Buttom text\",\n        className: \"form--input\",\n        name: \"bottomText\",\n        value: meme.buttomText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--button\",\n        onClick: getMemeImage,\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomImage,\n        className: \"meme--image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text top\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text bottom\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Meme, \"R5+t0Qgt4MCw7dVgQ3x0n1tnjaE=\");\n\n_c = Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","Meme","meme","setMeme","useState","topText","bottomText","randomImage","allMemes","setAllMemes","useEffect","getMemes","res","fetch","data","json","memes","getMeme","getMemeImage","randomNumber","Math","floor","random","length","url","prevMeme","handleChange","event","name","value","target","buttomText"],"sources":["/Users/oluwaseyimichael/Dev/React/MemeGenerator/meme-generator/src/components/Meme.js"],"sourcesContent":["import React from \"react\";\n// import memesData from \"../memesData.js\";\n\nexport default function Meme(){\n    // [memeImage, setMemeImage] = React.useState()\n    const [meme, setMeme] = React.useState({\n        topText: \"\",\n        bottomText: \"\",\n        randomImage: \"https://i.imgflip.com/30b1gx.jpg\"\n    })\n    const [allMemes, setAllMemes] = React.useState([])\n\n    React.useEffect(() => {\n        async function getMemes() {\n            const res = await fetch(\"https://api.imgflip.com/get_memes\")\n            const data = await res.json()\n            setAllMemes(data.data.memes)\n        }\n        getMeme()\n    },[])\n\n    function getMemeImage() {\n        const randomNumber = Math.floor(Math.random() * allMemes.length)\n        const url = allMemes[randomNumber].url\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            randomImage: url\n        }))     \n    }\n\n    function handleChange(event) {\n        const {name, value} = event.target\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            [name]: value\n        })) \n    }\n\n\n    return (\n        <main>\n            <div className=\"form\">\n                <input \n                    type=\"text\"\n                    placeholder=\"Top text\"\n                    className=\"form--input\"\n                    name=\"topText\"\n                    value={meme.topText}\n                    onChange={handleChange}\n                />\n                <input \n                    type=\"text\"\n                    placeholder=\"Buttom text\"\n                    className=\"form--input\"\n                    name=\"bottomText\"\n                    value={meme.buttomText}\n                    onChange={handleChange}\n                />\n                <button \n                    className=\"form--button\"\n                    onClick={getMemeImage}\n                >\n                        Get a new meme image ðŸ–¼ \n                </button>\n            </div>\n            <div className=\"meme\">\n                <img src={meme.randomImage} className=\"meme--image\" />\n                <h2 className=\"meme--text top\">{meme.topText}</h2>\n                <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\n            </div>\n        </main>\n    )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;;AAEA,eAAe,SAASC,IAAT,GAAe;EAAA;;EAC1B;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,KAAK,CAACI,QAAN,CAAe;IACnCC,OAAO,EAAE,EAD0B;IAEnCC,UAAU,EAAE,EAFuB;IAGnCC,WAAW,EAAE;EAHsB,CAAf,CAAxB;EAKA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,KAAK,CAACI,QAAN,CAAe,EAAf,CAAhC;EAEAJ,KAAK,CAACU,SAAN,CAAgB,MAAM;IAClB,eAAeC,QAAf,GAA0B;MACtB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAD,CAAvB;MACA,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;MACAN,WAAW,CAACK,IAAI,CAACA,IAAL,CAAUE,KAAX,CAAX;IACH;;IACDC,OAAO;EACV,CAPD,EAOE,EAPF;;EASA,SAASC,YAAT,GAAwB;IACpB,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBd,QAAQ,CAACe,MAApC,CAArB;IACA,MAAMC,GAAG,GAAGhB,QAAQ,CAACW,YAAD,CAAR,CAAuBK,GAAnC;IACArB,OAAO,CAACsB,QAAQ,KAAK,EACjB,GAAGA,QADc;MAEjBlB,WAAW,EAAEiB;IAFI,CAAL,CAAT,CAAP;EAIH;;EAED,SAASE,YAAT,CAAsBC,KAAtB,EAA6B;IACzB,MAAM;MAACC,IAAD;MAAOC;IAAP,IAAgBF,KAAK,CAACG,MAA5B;IACA3B,OAAO,CAACsB,QAAQ,KAAK,EACjB,GAAGA,QADc;MAEjB,CAACG,IAAD,GAAQC;IAFS,CAAL,CAAT,CAAP;EAIH;;EAGD,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,MAAf;MAAA,wBACI;QACI,IAAI,EAAC,MADT;QAEI,WAAW,EAAC,UAFhB;QAGI,SAAS,EAAC,aAHd;QAII,IAAI,EAAC,SAJT;QAKI,KAAK,EAAE3B,IAAI,CAACG,OALhB;QAMI,QAAQ,EAAEqB;MANd;QAAA;QAAA;QAAA;MAAA,QADJ,eASI;QACI,IAAI,EAAC,MADT;QAEI,WAAW,EAAC,aAFhB;QAGI,SAAS,EAAC,aAHd;QAII,IAAI,EAAC,YAJT;QAKI,KAAK,EAAExB,IAAI,CAAC6B,UALhB;QAMI,QAAQ,EAAEL;MANd;QAAA;QAAA;QAAA;MAAA,QATJ,eAiBI;QACI,SAAS,EAAC,cADd;QAEI,OAAO,EAAER,YAFb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAjBJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAyBI;MAAK,SAAS,EAAC,MAAf;MAAA,wBACI;QAAK,GAAG,EAAEhB,IAAI,CAACK,WAAf;QAA4B,SAAS,EAAC;MAAtC;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAI,SAAS,EAAC,gBAAd;QAAA,UAAgCL,IAAI,CAACG;MAArC;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAI,SAAS,EAAC,mBAAd;QAAA,UAAmCH,IAAI,CAACI;MAAxC;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAzBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAiCH;;GArEuBL,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}